rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId && !(request.resource.data.keys().hasAny(['role','blocked']));
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /swipes/{swipeId} {
      allow create: if request.auth != null && request.resource.data.fromUserId == request.auth.uid;
      allow read: if request.auth != null;
    }
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create: if false; // created by Cloud Functions
      allow update, delete: if false;
    }
    match /messages/{messageId} {
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;
      allow read: if request.auth != null;
    }
    match /reports/{reportId} {
      allow create: if request.auth != null && request.resource.data.reportedUserId is string && request.resource.data.reason is string;
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
